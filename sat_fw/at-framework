#!/bin/bash

. $SAT_ROOT/sat_fw/at-utils

_L_INIT_ENV_CB=_init_env
TEMPLATE_ROOT=template
T_CASE_HEAD=_case_head.t
T_CASE_TAIL=_case_tail.t
F_TMP_CASE_LIST=.tscl.tmp~
F_TMP_CASE_SH=.tscl.ex.tmp~

function execute_suite #$1: suite
{
    # suite must be a absolute path.
    local suite=$1
    [[ ${suite:0:1} != '/' ]] && {
        logw "Invalid suite path, skipping test suite."
        return 1
    }

    local wd=`dirname $suite`
    logi "Begin executing test suite: "$suite
    local curr=$suite

    # locate the _init_env
    while [[ ! -f $curr/$F_INIT_ENV && -n $curr ]]; do
        curr=${curr%/*}
    done

    # TODO: need inherted from parent _init_env.
    [[ -n $curr ]] && . $curr/$F_INIT_ENV || logi "No available _init_env for this suite, needn't init env."

    find $suite -type f > $F_TMP_CASE_LIST
    while read line; do
        fname=`basename $line`
        case $fname in
            $F_PROJ_CONF|$F_SUITE_CONF|$F_INIT_ENV|$F_CASES_FLAG)
                continue
                ;;
        esac

        logi "=> Executing test case: ["$fname"]"
        cat $SAT_ROOT/$TEMPLATE_ROOT/$T_CASE_HEAD > $F_TMP_CASE_SH
        cat $line >> $F_TMP_CASE_SH
        cat $SAT_ROOT/$TEMPLATE_ROOT/$T_CASE_TAIL >> $F_TMP_CASE_SH
        bash $F_TMP_CASE_SH
        logi "<= Executing test case completed!"
        rm -rf $F_TMP_CASE_SH
    done < $F_TMP_CASE_LIST
    rm -rf $F_TMP_CASE_LIST

    logi "End executing test suite: "$suite
}

function _case_failed
{
    __case_failed
    rpt $FAILED_INFO
}

function _case_passed
{
    rpt $PASSED_INFO
    __case_passed
}
